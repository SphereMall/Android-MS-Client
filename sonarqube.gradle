// recommend to specify the flavor once and dynamically adapt paths to it
def flavor = "develop" // flavor we want to have tested. Should be static
def Flavor = "Develop" // flavor again, but starting with upper case

// noinspection is used to remove some "warnings" from Android Studio
sonarqube {
    //noinspection GroovyAssignabilityCheck
    properties {
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-27/android.jar"
        if (project.plugins.hasPlugin('com.android.application')) {
            "build/intermediates/exploded-aar/**/classes.jar"
        }

        property "sonar.projectName", "MS Android Client (SphereMall API)"
        property "sonar.projectKey", "com.spheremall.core"
        property "sonar.host.url", "http://192.168.53.48:9000"
        property "sonar.sources", "src/main/java"
        // Defines where the java files are
        property "sonar.binaries", "build/intermediates/classes/debug"
        property "sonar.libraries", libraries
        // Defines where the xml files are
        property "sonar.java.binaries", "build/intermediates/classes/debug"
        property "sonar.java.libraries", libraries

        if (project.plugins.hasPlugin('com.android.application')) {
            property "sonar.tests", "src/test/java, src/androidTest/java"
        } else {
            property "sonar.tests", "src/test/java"
        }

        property "sonar.java.test.binaries", "build/intermediates/classes/debug"
        property "sonar.java.test.libraries", libraries

        property "sonar.jacoco.reportPath", "build/jacoco/testDebugUnitTest.exec"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
        property "sonar.android.lint.report", "build/outputs/lint-results.xml"
    }
}

import org.gradle.internal.os.OperatingSystem

task sonarComplete(type: Exec) {
    workingDir "./"
    def command = "../gradlew"
    if (OperatingSystem.current().isWindows()) {
        command = command + ".bat"
    }
    commandLine command, "clean", "assemble${Flavor}Debug", "lint${Flavor}Debug", "jacocoTest${Flavor}DebugUnitTestReport", "sonarqube"
}